# Generated by Django 4.2.7 on 2025-07-04 19:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('test_type', models.CharField(choices=[('unit', 'Unit Test'), ('integration', 'Integration Test'), ('input_output', 'Input/Output Test'), ('performance', 'Performance Test'), ('memory', 'Memory Test'), ('custom', 'Custom Test')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('input_data', models.TextField(blank=True)),
                ('expected_output', models.TextField(blank=True)),
                ('expected_error', models.TextField(blank=True)),
                ('setup_code', models.TextField(blank=True)),
                ('test_code', models.TextField(blank=True)),
                ('teardown_code', models.TextField(blank=True)),
                ('timeout', models.PositiveIntegerField(default=10)),
                ('max_memory', models.PositiveIntegerField(default=64)),
                ('points', models.PositiveIntegerField(default=1)),
                ('is_hidden', models.BooleanField(default=False)),
                ('is_required', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('weight', models.FloatField(default=1.0)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('max_execution_time', models.FloatField(blank=True, null=True)),
                ('max_memory_usage', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_case_object', to='courses.exercise')),
            ],
            options={
                'verbose_name': 'Test Case',
                'verbose_name_plural': 'Test Cases',
                'ordering': ['exercise', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ExecutionEnvironment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=20)),
                ('docker_image', models.CharField(max_length=200)),
                ('default_timeout', models.PositiveIntegerField(default=30)),
                ('max_memory', models.PositiveIntegerField(default=128)),
                ('max_cpu_time', models.PositiveIntegerField(default=10)),
                ('max_file_size', models.PositiveIntegerField(default=10)),
                ('supports_input', models.BooleanField(default=True)),
                ('supports_graphics', models.BooleanField(default=False)),
                ('supports_networking', models.BooleanField(default=False)),
                ('supports_file_operations', models.BooleanField(default=True)),
                ('compiler_command', models.CharField(blank=True, max_length=200)),
                ('interpreter_command', models.CharField(blank=True, max_length=200)),
                ('file_extension', models.CharField(max_length=10)),
                ('installed_packages', models.JSONField(default=list)),
                ('available_libraries', models.JSONField(default=list)),
                ('allowed_imports', models.JSONField(default=list)),
                ('blocked_imports', models.JSONField(default=list)),
                ('blocked_functions', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Maintenance'), ('deprecated', 'Deprecated'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Execution Environment',
                'verbose_name_plural': 'Execution Environments',
                'ordering': ['language', 'version'],
                'unique_together': {('language', 'version')},
            },
        ),
        migrations.CreateModel(
            name='CodeTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('starter', 'Starter Template'), ('solution', 'Solution Template'), ('example', 'Example Code'), ('boilerplate', 'Boilerplate'), ('framework', 'Framework Template')], max_length=20)),
                ('code_template', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('instructions', models.TextField(blank=True)),
                ('tags', models.JSONField(default=list)),
                ('difficulty_level', models.CharField(default='beginner', max_length=20)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_templates', to=settings.AUTH_USER_MODEL)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.executionenvironment')),
            ],
            options={
                'verbose_name': 'Code Template',
                'verbose_name_plural': 'Code Templates',
                'ordering': ['environment', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CodePlayground',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('source_code', models.TextField(default='')),
                ('is_public', models.BooleanField(default=False)),
                ('is_shared', models.BooleanField(default=False)),
                ('shared_url', models.CharField(blank=True, max_length=100, unique=True)),
                ('allow_editing', models.BooleanField(default=False)),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('collaborators', models.ManyToManyField(blank=True, related_name='shared_playgrounds', to=settings.AUTH_USER_MODEL)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.executionenvironment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playground_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Code Playground',
                'verbose_name_plural': 'Code Playgrounds',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CodeExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('execution_type', models.CharField(choices=[('exercise', 'Exercise Submission'), ('playground', 'Playground Code'), ('test', 'Test Run'), ('debug', 'Debug Session'), ('demo', 'Demo Code')], max_length=20)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('timeout', 'Timeout'), ('memory_limit', 'Memory Limit Exceeded'), ('security_violation', 'Security Violation'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('source_code', models.TextField()),
                ('stdin_input', models.TextField(blank=True)),
                ('command_line_args', models.JSONField(default=list)),
                ('stdout_output', models.TextField(blank=True)),
                ('stderr_output', models.TextField(blank=True)),
                ('exit_code', models.IntegerField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('memory_used', models.PositiveIntegerField(blank=True, null=True)),
                ('cpu_time', models.FloatField(blank=True, null=True)),
                ('container_id', models.CharField(blank=True, max_length=100)),
                ('worker_node', models.CharField(blank=True, max_length=100)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('security_violations', models.JSONField(default=list)),
                ('blocked_operations', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.executionenvironment')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_executions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Code Execution',
                'verbose_name_plural': 'Code Executions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('passed', 'Passed'), ('failed', 'Failed'), ('error', 'Error'), ('timeout', 'Timeout'), ('memory_exceeded', 'Memory Exceeded'), ('skipped', 'Skipped')], max_length=20)),
                ('actual_output', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('stack_trace', models.TextField(blank=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('memory_used', models.PositiveIntegerField(blank=True, null=True)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('points_possible', models.PositiveIntegerField(default=0)),
                ('output_diff', models.TextField(blank=True)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='code_execution.codeexecution')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.testcase')),
            ],
            options={
                'verbose_name': 'Test Result',
                'verbose_name_plural': 'Test Results',
                'unique_together': {('execution', 'test_case')},
            },
        ),
        migrations.CreateModel(
            name='ExecutionQuota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quota_type', models.CharField(choices=[('daily', 'Daily Quota'), ('monthly', 'Monthly Quota'), ('total', 'Total Quota')], max_length=10)),
                ('max_executions', models.PositiveIntegerField()),
                ('max_execution_time', models.PositiveIntegerField()),
                ('max_memory_usage', models.PositiveIntegerField()),
                ('executions_used', models.PositiveIntegerField(default=0)),
                ('execution_time_used', models.PositiveIntegerField(default=0)),
                ('memory_usage_used', models.PositiveIntegerField(default=0)),
                ('last_reset', models.DateTimeField(auto_now_add=True)),
                ('next_reset', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_exceeded', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_quotas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Execution Quota',
                'verbose_name_plural': 'Execution Quotas',
                'unique_together': {('user', 'quota_type')},
            },
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['user', 'status'], name='code_execut_user_id_d16265_idx'),
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['environment', 'status'], name='code_execut_environ_bc0adf_idx'),
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['exercise', 'user'], name='code_execut_exercis_6f17e1_idx'),
        ),
    ]
