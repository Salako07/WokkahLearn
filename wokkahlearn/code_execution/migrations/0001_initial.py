# Generated by Django 4.2.7 on 2025-07-07 13:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CodePlayground',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public'), ('shared', 'Shared with Link'), ('course', 'Course Members Only')], default='private', max_length=20)),
                ('source_code', models.TextField(default='')),
                ('saved_inputs', models.JSONField(default=list)),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(default=list)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_template', models.BooleanField(default=False)),
                ('fork_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Code Playground',
                'verbose_name_plural': 'Code Playgrounds',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ExecutionStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_executions', models.PositiveIntegerField(default=0)),
                ('successful_executions', models.PositiveIntegerField(default=0)),
                ('failed_executions', models.PositiveIntegerField(default=0)),
                ('timeout_executions', models.PositiveIntegerField(default=0)),
                ('average_execution_time', models.FloatField(default=0.0)),
                ('total_cpu_time', models.FloatField(default=0.0)),
                ('total_memory_used', models.BigIntegerField(default=0)),
                ('language_stats', models.JSONField(default=dict)),
                ('unique_users', models.PositiveIntegerField(default=0)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('peak_concurrent_executions', models.PositiveIntegerField(default=0)),
                ('total_container_hours', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Execution Statistics',
                'verbose_name_plural': 'Execution Statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('test_type', models.CharField(choices=[('unit', 'Unit Test'), ('integration', 'Integration Test'), ('performance', 'Performance Test'), ('edge_case', 'Edge Case Test'), ('stress', 'Stress Test')], default='unit', max_length=20)),
                ('input_data', models.TextField(blank=True)),
                ('expected_output', models.TextField()),
                ('expected_error', models.TextField(blank=True)),
                ('expected_exit_code', models.IntegerField(default=0)),
                ('timeout_seconds', models.PositiveIntegerField(default=30)),
                ('max_memory_mb', models.PositiveIntegerField(default=128)),
                ('is_public', models.BooleanField(default=True)),
                ('is_sample', models.BooleanField(default=False)),
                ('weight', models.FloatField(default=1.0)),
                ('points', models.PositiveIntegerField(default=1)),
                ('strict_output_matching', models.BooleanField(default=True)),
                ('ignore_whitespace', models.BooleanField(default=False)),
                ('ignore_case', models.BooleanField(default=False)),
                ('custom_checker', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='courses.exercise')),
            ],
            options={
                'verbose_name': 'Test Case',
                'verbose_name_plural': 'Test Cases',
                'ordering': ['exercise', 'order'],
                'unique_together': {('exercise', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PlaygroundCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('view', 'View Only'), ('edit', 'Edit Code'), ('admin', 'Admin Access')], default='view', max_length=20)),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('playground', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.codeplayground')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('playground', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ExecutionEnvironment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=20)),
                ('docker_image', models.CharField(max_length=200)),
                ('default_timeout', models.PositiveIntegerField(default=30)),
                ('max_memory', models.PositiveIntegerField(default=128)),
                ('max_cpu_time', models.PositiveIntegerField(default=10)),
                ('max_file_size', models.PositiveIntegerField(default=10)),
                ('max_output_size', models.PositiveIntegerField(default=1)),
                ('supports_input', models.BooleanField(default=True)),
                ('supports_graphics', models.BooleanField(default=False)),
                ('supports_networking', models.BooleanField(default=False)),
                ('supports_file_operations', models.BooleanField(default=True)),
                ('supports_packages', models.BooleanField(default=True)),
                ('compiler_command', models.CharField(blank=True, max_length=200)),
                ('interpreter_command', models.CharField(blank=True, max_length=200)),
                ('file_extension', models.CharField(max_length=10)),
                ('entry_point', models.CharField(default='main', max_length=100)),
                ('installed_packages', models.JSONField(default=list)),
                ('available_libraries', models.JSONField(default=list)),
                ('allowed_imports', models.JSONField(default=list)),
                ('blocked_imports', models.JSONField(default=list)),
                ('blocked_functions', models.JSONField(default=list)),
                ('sandbox_level', models.CharField(default='strict', max_length=20)),
                ('concurrent_executions_limit', models.PositiveIntegerField(default=5)),
                ('daily_execution_limit', models.PositiveIntegerField(default=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Maintenance'), ('deprecated', 'Deprecated'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('priority', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Execution Environment',
                'verbose_name_plural': 'Execution Environments',
                'ordering': ['priority', 'language', 'version'],
                'unique_together': {('language', 'version')},
            },
        ),
        migrations.AddField(
            model_name='codeplayground',
            name='collaborators',
            field=models.ManyToManyField(related_name='shared_playgrounds', through='code_execution.PlaygroundCollaborator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='codeplayground',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.course'),
        ),
        migrations.AddField(
            model_name='codeplayground',
            name='environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.executionenvironment'),
        ),
        migrations.AddField(
            model_name='codeplayground',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playgrounds', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CodeExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('execution_type', models.CharField(choices=[('exercise', 'Exercise Submission'), ('playground', 'Playground Testing'), ('assessment', 'Assessment'), ('collaboration', 'Collaborative Session'), ('debug', 'Debug Session')], max_length=20)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('source_code', models.TextField()),
                ('stdin_input', models.TextField(blank=True)),
                ('command_line_args', models.JSONField(default=list)),
                ('environment_vars', models.JSONField(default=dict)),
                ('stdout_output', models.TextField(blank=True)),
                ('stderr_output', models.TextField(blank=True)),
                ('exit_code', models.IntegerField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('memory_used', models.BigIntegerField(blank=True, null=True)),
                ('cpu_time', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('timeout', 'Timeout'), ('cancelled', 'Cancelled'), ('error', 'Error')], default='pending', max_length=20)),
                ('container_id', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_successful', models.BooleanField(blank=True, null=True)),
                ('quality_score', models.FloatField(blank=True, null=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.executionenvironment')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_executions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Code Execution',
                'verbose_name_plural': 'Code Executions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('passed', 'Passed'), ('failed', 'Failed'), ('error', 'Error'), ('timeout', 'Timeout'), ('skipped', 'Skipped')], max_length=20)),
                ('actual_output', models.TextField(blank=True)),
                ('actual_error', models.TextField(blank=True)),
                ('actual_exit_code', models.IntegerField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('memory_used', models.BigIntegerField(blank=True, null=True)),
                ('output_diff', models.TextField(blank=True)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0.0)),
                ('feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='code_execution.codeexecution')),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='code_execution.testcase')),
            ],
            options={
                'verbose_name': 'Test Result',
                'verbose_name_plural': 'Test Results',
                'ordering': ['test_case__order'],
                'unique_together': {('execution', 'test_case')},
            },
        ),
        migrations.CreateModel(
            name='ExecutionQuota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quota_type', models.CharField(choices=[('daily', 'Daily Quota'), ('monthly', 'Monthly Quota'), ('total', 'Total Quota')], max_length=20)),
                ('max_executions', models.PositiveIntegerField()),
                ('max_cpu_time', models.PositiveIntegerField()),
                ('max_memory', models.PositiveIntegerField()),
                ('executions_used', models.PositiveIntegerField(default=0)),
                ('cpu_time_used', models.FloatField(default=0.0)),
                ('memory_used', models.BigIntegerField(default=0)),
                ('reset_date', models.DateField()),
                ('last_reset', models.DateTimeField(auto_now_add=True)),
                ('is_exceeded', models.BooleanField(default=False)),
                ('is_warning_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_quotas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Execution Quota',
                'verbose_name_plural': 'Execution Quotas',
                'unique_together': {('user', 'quota_type')},
            },
        ),
        migrations.CreateModel(
            name='CodeTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('starter', 'Starter Template'), ('solution', 'Solution Template'), ('example', 'Example Code'), ('boilerplate', 'Boilerplate'), ('framework', 'Framework Template'), ('library', 'Library Template')], max_length=20)),
                ('code_template', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('instructions', models.TextField(blank=True)),
                ('placeholder_comments', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('difficulty_level', models.CharField(default='beginner', max_length=20)),
                ('estimated_time', models.PositiveIntegerField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('average_completion_time', models.FloatField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_templates', to=settings.AUTH_USER_MODEL)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='code_execution.executionenvironment')),
            ],
            options={
                'verbose_name': 'Code Template',
                'verbose_name_plural': 'Code Templates',
                'ordering': ['environment', 'name'],
                'indexes': [models.Index(fields=['environment', 'template_type'], name='code_execut_environ_da3d79_idx'), models.Index(fields=['difficulty_level', 'is_active'], name='code_execut_difficu_5ce20c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['user', 'status'], name='code_execut_user_id_d16265_idx'),
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['exercise', 'user'], name='code_execut_exercis_6f17e1_idx'),
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['created_at'], name='code_execut_created_218079_idx'),
        ),
        migrations.AddIndex(
            model_name='codeexecution',
            index=models.Index(fields=['execution_type', 'status'], name='code_execut_executi_c33008_idx'),
        ),
    ]
