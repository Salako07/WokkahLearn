# Generated by Django 4.2.7 on 2025-07-04 19:20

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('active_users_daily', models.PositiveIntegerField(default=0)),
                ('new_registrations', models.PositiveIntegerField(default=0)),
                ('user_retention_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_courses', models.PositiveIntegerField(default=0)),
                ('courses_published', models.PositiveIntegerField(default=0)),
                ('total_enrollments', models.PositiveIntegerField(default=0)),
                ('course_completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_study_time', models.DurationField(default=datetime.timedelta(0))),
                ('exercises_completed', models.PositiveIntegerField(default=0)),
                ('projects_completed', models.PositiveIntegerField(default=0)),
                ('certificates_issued', models.PositiveIntegerField(default=0)),
                ('collaboration_sessions', models.PositiveIntegerField(default=0)),
                ('ai_interactions', models.PositiveIntegerField(default=0)),
                ('help_requests', models.PositiveIntegerField(default=0)),
                ('forum_posts', models.PositiveIntegerField(default=0)),
                ('average_course_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('student_satisfaction', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('platform_uptime', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('average_response_time', models.DecimalField(decimal_places=3, default=0.0, max_digits=8)),
                ('code_execution_success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('ai_accuracy_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Platform Analytics',
                'verbose_name_plural': 'Platform Analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_type', models.CharField(choices=[('lesson', 'Lesson Study'), ('exercise', 'Exercise Practice'), ('project', 'Project Work'), ('review', 'Review Session'), ('collaboration', 'Collaborative Study'), ('self_study', 'Self Study')], max_length=20)),
                ('duration', models.DurationField()),
                ('focus_score', models.PositiveIntegerField(help_text='Focus level during session (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('productivity_score', models.PositiveIntegerField(help_text='Productivity level (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('actions_performed', models.JSONField(default=list)),
                ('concepts_studied', models.JSONField(default=list)),
                ('skills_practiced', models.JSONField(default=list)),
                ('exercises_attempted', models.PositiveIntegerField(default=0)),
                ('exercises_completed', models.PositiveIntegerField(default=0)),
                ('average_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('frustration_level', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('satisfaction_level', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('exercise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.exercise')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Study Session',
                'verbose_name_plural': 'Study Sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('performance', 'Performance Insight'), ('behavior', 'Learning Behavior'), ('prediction', 'Predictive Insight'), ('recommendation', 'Recommendation'), ('warning', 'Warning/Alert'), ('achievement', 'Achievement Recognition')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('detailed_analysis', models.TextField(blank=True)),
                ('supporting_data', models.JSONField(default=dict)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('skill', models.CharField(blank=True, max_length=100)),
                ('recommended_actions', models.JSONField(default=list)),
                ('is_read', models.BooleanField(default=False)),
                ('is_acted_upon', models.BooleanField(default=False)),
                ('generated_by', models.CharField(default='analytics_engine', max_length=100)),
                ('generation_context', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_insights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Insight',
                'verbose_name_plural': 'Learning Insights',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_study_time', models.DurationField(default=datetime.timedelta(0))),
                ('total_courses_enrolled', models.PositiveIntegerField(default=0)),
                ('total_courses_completed', models.PositiveIntegerField(default=0)),
                ('total_lessons_completed', models.PositiveIntegerField(default=0)),
                ('total_exercises_completed', models.PositiveIntegerField(default=0)),
                ('total_projects_completed', models.PositiveIntegerField(default=0)),
                ('average_exercise_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_completion_time', models.DurationField(default=datetime.timedelta(0))),
                ('success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('preferred_study_times', models.JSONField(default=list)),
                ('most_productive_days', models.JSONField(default=list)),
                ('learning_velocity', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('forum_posts', models.PositiveIntegerField(default=0)),
                ('help_requests_made', models.PositiveIntegerField(default=0)),
                ('help_provided', models.PositiveIntegerField(default=0)),
                ('skill_progression', models.JSONField(default=dict)),
                ('strengths', models.JSONField(default=list)),
                ('areas_for_improvement', models.JSONField(default=list)),
                ('learning_style', models.CharField(choices=[('visual', 'Visual'), ('auditory', 'Auditory'), ('kinesthetic', 'Kinesthetic'), ('reading', 'Reading/Writing'), ('mixed', 'Mixed')], default='mixed', max_length=20)),
                ('difficulty_preference', models.CharField(choices=[('gradual', 'Gradual Progression'), ('challenging', 'Challenging'), ('mixed', 'Mixed Difficulty')], default='gradual', max_length=20)),
                ('predicted_completion_date', models.DateField(blank=True, null=True)),
                ('predicted_success_probability', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('at_risk_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Risk of dropping out (0-100)', max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='learning_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Analytics',
                'verbose_name_plural': 'Learning Analytics',
            },
        ),
        migrations.CreateModel(
            name='InstructorAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_courses_taught', models.PositiveIntegerField(default=0)),
                ('total_students_taught', models.PositiveIntegerField(default=0)),
                ('average_course_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('student_satisfaction_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('lessons_created', models.PositiveIntegerField(default=0)),
                ('exercises_created', models.PositiveIntegerField(default=0)),
                ('content_quality_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_student_completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_student_performance', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('student_success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('response_time_to_questions', models.DurationField(default=datetime.timedelta(0))),
                ('forum_participation', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('office_hours_utilization', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('skills_taught', models.JSONField(default=list)),
                ('certifications', models.JSONField(default=list)),
                ('professional_growth_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instructor Analytics',
                'verbose_name_plural': 'Instructor Analytics',
            },
        ),
        migrations.CreateModel(
            name='CourseAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_enrollments', models.PositiveIntegerField(default=0)),
                ('active_students', models.PositiveIntegerField(default=0)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('dropout_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_grade', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_completion_time', models.DurationField(default=datetime.timedelta(0))),
                ('exercise_success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_study_time_per_student', models.DurationField(default=datetime.timedelta(0))),
                ('forum_activity_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('collaboration_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('most_difficult_lessons', models.JSONField(default=list)),
                ('most_helpful_lessons', models.JSONField(default=list)),
                ('bottleneck_exercises', models.JSONField(default=list)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('satisfaction_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('enrollment_trend', models.JSONField(default=list)),
                ('completion_trend', models.JSONField(default=list)),
                ('engagement_trend', models.JSONField(default=list)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='courses.course')),
            ],
            options={
                'verbose_name': 'Course Analytics',
                'verbose_name_plural': 'Course Analytics',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('completion_rate', 'Completion Rate'), ('average_score', 'Average Score'), ('study_time', 'Study Time'), ('exercise_accuracy', 'Exercise Accuracy'), ('learning_velocity', 'Learning Velocity'), ('engagement_score', 'Engagement Score'), ('skill_level', 'Skill Level')], max_length=20)),
                ('granularity', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('previous_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('change_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('skill', models.CharField(blank=True, max_length=100)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Performance Metric',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['-period_start'],
                'unique_together': {('user', 'metric_type', 'granularity', 'period_start', 'course', 'skill')},
            },
        ),
    ]
